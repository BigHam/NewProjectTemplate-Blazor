@page "/index"
@using Havit.GoranG3.Contracts.GrpcTests;
@using ProtoBuf.Grpc.Client;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAccessTokenProvider AccessTokenProvider
@inject NavigationManager NavigationManager

<h1>Hello, world!</h1>
<EditForm Model="@request" OnValidSubmit="Submit">
	<InputText @bind-Value="request.Message" />
	<InputNumber @bind-Value="request.Value" />
	<input type="submit" value="Submit" />
</EditForm>

<div><button @onclick="AddRole">Add role</button></div>

<div>
	<AuthorizeView Roles="SystemAdministrator">
		Has SystemAdministrator role.
	</AuthorizeView>
	<AuthorizeView Roles="UserSettingsAdministrator">
		Has UserSettingsAdministrator role.
	</AuthorizeView>
</div>

@if (result != null)
{
	@result.Message
	<br />
	@result.Value
	<br />
}


@code
{
	DoSomethingRequest request = new DoSomethingRequest() { Message = "Jupííí", Value = 42 };
	DoSomethingResult result;

	async Task Submit()
	{
		var tokenResult = await AccessTokenProvider.RequestAccessToken();

		if (tokenResult.TryGetToken(out var token))
		{
			var handler = new Grpc.Net.Client.Web.GrpcWebHandler(Grpc.Net.Client.Web.GrpcWebMode.GrpcWeb, new HttpClientHandler());
			var httpClient = new HttpClient(handler);
			httpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {token.Value}");
			using (var channel = Grpc.Net.Client.GrpcChannel.ForAddress("https://localhost:44377/", new Grpc.Net.Client.GrpcChannelOptions() { HttpClient = httpClient }))
			{
				var testFacade = channel.CreateGrpcService<Havit.GoranG3.Contracts.GrpcTests.ITestFacade>();
				this.result = await testFacade.DoSomething(request);
			}
		}
		else
		{
			NavigationManager.NavigateTo(tokenResult.RedirectUrl);
		}
	}

	async Task AddRole()
	{
		var tokenResult = await AccessTokenProvider.RequestAccessToken();

		if (tokenResult.TryGetToken(out var token))
		{
			var handler = new Grpc.Net.Client.Web.GrpcWebHandler(Grpc.Net.Client.Web.GrpcWebMode.GrpcWeb, new HttpClientHandler());
			var httpClient = new HttpClient(handler);
			httpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {token.Value}");
			using (var channel = Grpc.Net.Client.GrpcChannel.ForAddress("https://localhost:44377/", new Grpc.Net.Client.GrpcChannelOptions() { HttpClient = httpClient }))
			{
				var testFacade = channel.CreateGrpcService<Havit.GoranG3.Contracts.GrpcTests.ITestFacade>();
				await testFacade.AddRole();
			}
		}
		else
		{
			NavigationManager.NavigateTo(tokenResult.RedirectUrl);
		}
	}
}