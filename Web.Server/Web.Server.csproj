<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net5.0</TargetFramework>
		<DisableImplicitComponentsAnalyzers>true</DisableImplicitComponentsAnalyzers>
		<UserSecretsId>BlazorWasm-CSharp.Server-07F7A679-6CA8-442B-83BF-C889FBC5F990</UserSecretsId>
		<AssemblyName>Havit.NewProjectTemplate.Web.Server</AssemblyName>
		<RootNamespace>Havit.NewProjectTemplate.Web.Server</RootNamespace>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Grpc.AspNetCore.Web" Version="2.37.0" />
		<PackageReference Include="Havit.AspNetCore" Version="2.0.6" />
		<PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.17.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="5.0.6" />
		<PackageReference Include="protobuf-net" Version="3.0.101" />
		<PackageReference Include="protobuf-net.Grpc.AspNetCore" Version="1.0.152" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Contracts\Contracts.csproj" />
		<ProjectReference Include="..\DataLayer\DataLayer.csproj" />
		<ProjectReference Include="..\DependencyInjection\DependencyInjection.csproj" />
		<ProjectReference Include="..\Facades\Facades.csproj" />
		<ProjectReference Include="..\Model\Model.csproj" />
		<ProjectReference Include="..\Web.Client\Web.Client.csproj" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Havit.Blazor.Components.Web.Bootstrap" Version="1.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.6" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.6" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.6" />
		<PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="5.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.6">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<Target Name="CopyMissingBlazorContent" BeforeTargets="_CopyResolvedFilesToPublishAlways">
		<!-- https://github.com/dotnet/aspnetcore/issues/28680 Missing _framework while publishing .sln -->
		<PropertyGroup>
			<ClientPublishWwwroot>$([System.String]::Copy('$(PublishDir)').Replace('Server','Client').Replace('PubTmp','browser-wasm\PubTmp'))wwwroot\</ClientPublishWwwroot>
			<ServerPublishWwwroot>$(PublishDir)wwwroot\</ServerPublishWwwroot>
		</PropertyGroup>

		<Message Text="ClientPublishWwwroot: $(ClientPublishWwwroot)" Importance="High" />
		<Message Text="ServerPublishWwwroot: $(ServerPublishWwwroot)" Importance="High" />

		<Delete Files="$(ServerPublishWwwroot)**\*.*" />

		<CreateItem Include="$(ClientPublishWwwroot)**\*.*">
			<Output TaskParameter="Include" ItemName="FilesToCopy" />
		</CreateItem>

		<Copy SourceFiles="@(FilesToCopy)" DestinationFiles="@(FilesToCopy->'$(ServerPublishWwwroot)%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
	</Target>

	<Target Name="TfsPublish" AfterTargets="AfterPublish" Condition="'$(PublishDirectory)' != ''">
		<ItemGroup>
			<PublishToCopy Include="obj\Release\TfsPublish\*.zip" />
		</ItemGroup>
		<Copy SourceFiles="@(PublishToCopy)" DestinationFolder="$(PublishDirectory)\Web" />
	</Target>
</Project>
